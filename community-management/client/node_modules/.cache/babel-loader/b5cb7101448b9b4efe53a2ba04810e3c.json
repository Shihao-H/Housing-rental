{"ast":null,"code":"import { appConstants } from \"../constants/constant\";\nimport axios from 'axios';\nexport const login = (user, success, failure) => {\n  // we can use a library called qs   qs.stringify(user) to get a urlencoded form data\n  const userFormData = new FormData();\n  userFormData.append('username', user.username);\n  userFormData.append('password', user.password); // ES6 fetch API, async, await\n\n  const loginPromise = fetch('http://localhost:8089/login', {\n    method: 'POST',\n    body: userFormData,\n    credentials: 'include'\n  }).then(res => res.json()).then(res => {\n    console.log(res);\n    res.success ? // check success is a function\n    typeof success === 'function' && success() : typeof failure === 'function' && failure();\n    return res;\n  }).catch(err => {\n    typeof failure === 'function' && failure(err);\n    return err;\n  });\n  return {\n    type: appConstants.LOGIN,\n    payload: loginPromise\n  };\n}; // export const tourReserve = (tr, success, failure) => {\n//     const trPromise = axios.post(`${API}/tourReservations`, tr)\n//         .then(res => {\n//             // TODO: check success and failure and make sure it's a function (tech debt)\n//             // res.data.success ? success() : failure();\n//             res.data.success ?\n//                 typeof success === 'function' && success() :\n//                 typeof failure === 'function' && failure();\n//             return res;\n//         })\n//         .catch(err => {\n//             typeof failure === 'function' && failure(err);\n//             return err;\n//         });\n//\n//     return {\n//         type: appConstants.REGISTER,\n//         payload: trPromise\n//     };\n// };\n// export const register = (user, success, failure) => {\n//     // we can use a library called qs   qs.stringify(user) to get a urlencoded form data\n//     // const userFormData = new FormData();\n//     // userFormData.append('username', user.username);\n//     // userFormData.append('password', user.password);\n//     const jsf = JSON.stringify(user);\n//     // ES6 fetch API, async, await\n//     console.log(jsf);\n//     const registerPromise = fetch(\n//         'http://localhost:8089/users',\n//         {\n//             method: 'POST',\n//             body: jsf,\n//             credentials: 'include'\n//         }\n//         )\n//             .then(res => res.json())\n//             .then(res => {\n//                 res.success ?\n//                     typeof success === 'function' && success() :\n//                     typeof failure === 'function' && failure();\n//                 return res;\n//             })\n//             .catch(err => {\n//                 typeof failure === 'function' && failure(err);\n//                 return err;\n//             })\n//     ;\n//     return {\n//         type: appConstants.REGISTER,\n//         payload: registerPromise\n//     };\n// };","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/actions/auth.action.js"],"names":["appConstants","axios","login","user","success","failure","userFormData","FormData","append","username","password","loginPromise","fetch","method","body","credentials","then","res","json","console","log","catch","err","type","LOGIN","payload"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,KAA4B;AAC7C;AACA,QAAMC,YAAY,GAAG,IAAIC,QAAJ,EAArB;AACAD,EAAAA,YAAY,CAACE,MAAb,CAAoB,UAApB,EAAgCL,IAAI,CAACM,QAArC;AACAH,EAAAA,YAAY,CAACE,MAAb,CAAoB,UAApB,EAAgCL,IAAI,CAACO,QAArC,EAJ6C,CAK7C;;AACA,QAAMC,YAAY,GAAGC,KAAK,CACtB,6BADsB,EAEtB;AACIC,IAAAA,MAAM,EAAE,MADZ;AAEIC,IAAAA,IAAI,EAAER,YAFV;AAGIS,IAAAA,WAAW,EAAE;AAHjB,GAFsB,CAAL,CAQZC,IARY,CAQPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARA,EASZF,IATY,CASPC,GAAG,IAAI;AACTE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAA,IAAAA,GAAG,CAACb,OAAJ,GACI;AACA,WAAOA,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,EAF5C,GAGI,OAAOC,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,EAH5C;AAIA,WAAOY,GAAP;AACH,GAhBY,EAiBZI,KAjBY,CAiBNC,GAAG,IAAI;AACV,WAAOjB,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,CAACiB,GAAD,CAAxC;AACA,WAAOA,GAAP;AACH,GApBY,CAArB;AAsBA,SAAO;AACHC,IAAAA,IAAI,EAAEvB,YAAY,CAACwB,KADhB;AAEHC,IAAAA,OAAO,EAAEd;AAFN,GAAP;AAIH,CAhCM,C,CAsCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {appConstants} from \"../constants/constant\";\nimport axios from 'axios';\n\n\n\n\nexport const login = (user, success, failure) => {\n    // we can use a library called qs   qs.stringify(user) to get a urlencoded form data\n    const userFormData = new FormData();\n    userFormData.append('username', user.username);\n    userFormData.append('password', user.password);\n    // ES6 fetch API, async, await\n    const loginPromise = fetch(\n        'http://localhost:8089/login',\n        {\n            method: 'POST',\n            body: userFormData,\n            credentials: 'include'\n        }\n        )\n            .then(res => res.json())\n            .then(res => {\n                console.log(res);\n                res.success ?\n                    // check success is a function\n                    typeof success === 'function' && success() :\n                    typeof failure === 'function' && failure();\n                return res;\n            })\n            .catch(err => {\n                typeof failure === 'function' && failure(err);\n                return err;\n            })\n    ;\n    return {\n        type: appConstants.LOGIN,\n        payload: loginPromise\n    };\n};\n\n\n\n\n\n// export const tourReserve = (tr, success, failure) => {\n//     const trPromise = axios.post(`${API}/tourReservations`, tr)\n//         .then(res => {\n//             // TODO: check success and failure and make sure it's a function (tech debt)\n//             // res.data.success ? success() : failure();\n//             res.data.success ?\n//                 typeof success === 'function' && success() :\n//                 typeof failure === 'function' && failure();\n//             return res;\n//         })\n//         .catch(err => {\n//             typeof failure === 'function' && failure(err);\n//             return err;\n//         });\n//\n//     return {\n//         type: appConstants.REGISTER,\n//         payload: trPromise\n//     };\n// };\n\n\n\n// export const register = (user, success, failure) => {\n//     // we can use a library called qs   qs.stringify(user) to get a urlencoded form data\n//     // const userFormData = new FormData();\n//     // userFormData.append('username', user.username);\n//     // userFormData.append('password', user.password);\n//     const jsf = JSON.stringify(user);\n//     // ES6 fetch API, async, await\n//     console.log(jsf);\n//     const registerPromise = fetch(\n//         'http://localhost:8089/users',\n//         {\n//             method: 'POST',\n//             body: jsf,\n//             credentials: 'include'\n//         }\n//         )\n//             .then(res => res.json())\n//             .then(res => {\n//                 res.success ?\n//                     typeof success === 'function' && success() :\n//                     typeof failure === 'function' && failure();\n//                 return res;\n//             })\n//             .catch(err => {\n//                 typeof failure === 'function' && failure(err);\n//                 return err;\n//             })\n//     ;\n//     return {\n//         type: appConstants.REGISTER,\n//         payload: registerPromise\n//     };\n// };"]},"metadata":{},"sourceType":"module"}