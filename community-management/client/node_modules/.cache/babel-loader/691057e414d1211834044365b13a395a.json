{"ast":null,"code":"var _jsxFileName = \"/Users/shihaohuang/Documents/Mercury/community-management/client/src/interactions/FormDialog.js\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DatePicker from \"react-datepicker\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from \"clsx\";\nimport { tourReserve } from \"../actions/auth.action\";\nimport { applyMiddleware as dispatch } from \"redux\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    width: '25ch'\n  },\n  root: {\n    background: \"blue\"\n  },\n  whiteColor: {\n    color: \"white\"\n  }\n}));\nexport default function FormDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [tr, setTr] = useState({\n    firstname: '',\n    lastname: '',\n    floorplan: '',\n    phone: '',\n    email: '',\n    date: new Date(),\n    time: '',\n    sms: false,\n    status: 'not finished'\n  });\n\n  const handlePickDate = event => {\n    console.log(event.target.value);\n    const newTr = { ...tr\n    };\n    newTr.date = event.target.value;\n    setTr(newTr);\n    console.log(tr.date);\n  };\n\n  const handleChange = event => {\n    // console.log(event.target.value);\n    const newTr = { ...tr\n    };\n    newTr.floorplan = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFormControl = event => {\n    const newTr = { ...tr\n    };\n    newTr.firstname = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleFormControl2 = event => {\n    const newTr = { ...tr\n    };\n    newTr.lastname = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleFormControl3 = event => {\n    const newTr = { ...tr\n    };\n    newTr.email = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleFormControl4 = event => {\n    const newTr = { ...tr\n    };\n    newTr.phone = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleSubmit = event => {\n    setOpen(false);\n    event.preventDefault();\n    dispatch(tourReserve(tr, () => {\n      setOpen(true);\n      setTimeout(() => {\n        props.history.goBack();\n      }, 1000);\n    }, () => setOpen(true)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Schedule a tour\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Schedule a tour\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Is there a particular floor plan you would like to tour?\"), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    classes: {\n      // root: classes.whiteColor,\n      icon: classes.whiteColor\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: tr.floorplan,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'No, Thank you',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, \"No, Thank you\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '1x1(1 bed, 1 bath)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, \"1x1(1 bed, 1 bath)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '2x2(2 bed, 2 bath)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, \"2x2(2 bed, 2 bath)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '3x3(3 bed, 3 bath)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"3x3(3 bed, 3 bath)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '4x4(4 bed, 4 bath)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, \"4x4(4 bed, 4 bath)\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: tr.date,\n    onChange: handlePickDate,\n    minDate: new Date(new Date().valueOf() + 1000 * 3600 * 24),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: clsx(classes.margin, classes.textField),\n    autoFocus: true,\n    margin: \"dense\",\n    required: true,\n    id: \"first-name\",\n    label: \"First Name\",\n    value: tr.firstname,\n    onChange: handleFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: clsx(classes.margin, classes.textField),\n    autoFocus: true,\n    margin: \"dense\",\n    required: true,\n    id: \"last-name\",\n    label: \"Last Name\",\n    value: tr.lastname,\n    onChange: handleFormControl2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    required: true,\n    id: \"email\",\n    label: \"Email Address\",\n    type: \"email\",\n    fullWidth: true,\n    value: tr.email,\n    onChange: handleFormControl3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    required: true,\n    id: \"phone\",\n    label: \"Phone\",\n    type: \"number\",\n    fullWidth: true,\n    value: tr.phone,\n    onChange: handleFormControl4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, \"Schedule\"))));\n}","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/interactions/FormDialog.js"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","DatePicker","Select","MenuItem","FormControl","makeStyles","clsx","tourReserve","applyMiddleware","dispatch","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","textField","width","root","background","whiteColor","color","FormDialog","props","classes","open","setOpen","tr","setTr","firstname","lastname","floorplan","phone","email","date","Date","time","sms","status","handlePickDate","event","console","log","target","value","newTr","handleChange","handleClickOpen","handleClose","handleFormControl","handleFormControl2","handleFormControl3","handleFormControl4","handleSubmit","preventDefault","setTimeout","history","goBack","icon","valueOf"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DatePicker from \"react-datepicker\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from \"clsx\";\nimport {tourReserve} from \"../actions/auth.action\";\nimport {applyMiddleware as dispatch} from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        width: '25ch',\n    },\n    root: {\n        background: \"blue\",\n    },\n    whiteColor: {\n        color: \"white\"\n    }\n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const [tr, setTr] = useState({\n        firstname: '',\n        lastname: '',\n        floorplan: '',\n        phone: '',\n        email: '',\n        date: new Date(),\n        time: '',\n        sms: false,\n        status: 'not finished'\n\n    });\n\n    const handlePickDate = (event) => {\n        console.log(event.target.value);\n\n\n\n        const newTr = {...tr};\n        newTr.date = event.target.value;\n        setTr(newTr);\n        console.log(tr.date);\n    };\n\n    const handleChange = (event) => {\n        // console.log(event.target.value);\n        const newTr = {...tr};\n        newTr.floorplan = event.target.value;\n        setTr(newTr);\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleFormControl = (event) => {\n        const newTr = {...tr};\n        newTr.firstname = event.target.value;\n        setTr(newTr);\n    };\n\n    const handleFormControl2 = (event) => {\n        const newTr = {...tr};\n        newTr.lastname = event.target.value;\n        setTr(newTr);\n    };\n\n    const handleFormControl3 = (event) => {\n        const newTr = {...tr};\n        newTr.email = event.target.value;\n        setTr(newTr);\n    };\n\n\n    const handleFormControl4 = (event) => {\n        const newTr = {...tr};\n        newTr.phone = event.target.value;\n        setTr(newTr);\n    };\n\n\n    const handleSubmit = (event) => {\n        setOpen(false);\n        event.preventDefault();\n        dispatch(tourReserve(\n            tr,\n            () => {\n                setOpen(true);\n                setTimeout(() => {\n                    props.history.goBack();\n                }, 1000);\n            },\n            () => setOpen(true)\n        ));\n    };\n\n\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Schedule a tour\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Schedule a tour</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Is there a particular floor plan you would like to tour?\n                    </DialogContentText>\n                    <FormControl>\n                        {/*<InputLabel id=\"demo-simple-select-label\">Floor plan name</InputLabel>*/}\n                        <Select\n                            classes={{\n                                // root: classes.whiteColor,\n                                icon: classes.whiteColor\n                            }}\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={tr.floorplan}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'No, Thank you'}>No, Thank you</MenuItem>\n                            <MenuItem value={'1x1(1 bed, 1 bath)'}>1x1(1 bed, 1 bath)</MenuItem>\n                            <MenuItem value={'2x2(2 bed, 2 bath)'}>2x2(2 bed, 2 bath)</MenuItem>\n                            <MenuItem value={'3x3(3 bed, 3 bath)'}>3x3(3 bed, 3 bath)</MenuItem>\n                            <MenuItem value={'4x4(4 bed, 4 bath)'}>4x4(4 bed, 4 bath)</MenuItem>\n                        </Select>\n                    <br/>\n                    <br/>\n                    <DatePicker\n                        selected={tr.date}\n                        onChange={handlePickDate}\n                        minDate={new Date((new Date()).valueOf() + 1000*3600*24)}\n                    />\n                    <br/>\n                    <TextField\n                        className={clsx(classes.margin, classes.textField)}\n                        autoFocus\n                        margin=\"dense\"\n                        required id=\"first-name\"\n                        label=\"First Name\"\n                        value={tr.firstname}\n                        onChange={handleFormControl}\n                    />\n                    <TextField\n                        className={clsx(classes.margin, classes.textField)}\n                        autoFocus\n                        margin=\"dense\"\n                        required id=\"last-name\"\n                        label=\"Last Name\"\n                        value={tr.lastname}\n                        onChange={handleFormControl2}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        required id=\"email\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                        value={tr.email}\n                        onChange={handleFormControl3}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        required id=\"phone\"\n                        label=\"Phone\"\n                        type=\"number\"\n                        fullWidth\n                        value={tr.phone}\n                        onChange={handleFormControl4}\n                    />\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Schedule\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}