{"ast":null,"code":"import axios from \"axios\";\nimport { appConstants } from \"../constants/constant\";\nconst API = 'http://localhost:8089';\nexport const register = (user, success, failure) => {\n  const registerPromise = axios.post(`${API}/users`, user).then(res => {\n    // TODO: check success and failure and make sure it's a function (tech debt)\n    // res.data.success ? success() : failure();\n    res.data.success ? typeof success === 'function' && success() : typeof failure === 'function' && failure();\n    return res;\n  }).catch(err => {\n    typeof failure === 'function' && failure(err);\n    return err;\n  });\n  const userInfoPromise = axios.post(`${API}/users`, userInfo).then(res => {\n    // TODO: check success and failure and make sure it's a function (tech debt)\n    // res.data.success ? success() : failure();\n    res.data.success ? typeof success === 'function' && success() : typeof failure === 'function' && failure();\n    return res;\n  }).catch(err => {\n    typeof failure === 'function' && failure(err);\n    return err;\n  });\n  return {\n    type: appConstants.REGISTER,\n    payload: registerPromise\n  };\n};\nexport const checkLogin = () => {\n  const checkLoginPromise = fetch('http://localhost:8089/checklogin', {\n    credentials: 'include'\n  }).then(res => res.json()).catch();\n  return {\n    type: appConstants.CHECK_LOGIN,\n    payload: checkLoginPromise\n  };\n};","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/actions/user.action.js"],"names":["axios","appConstants","API","register","user","success","failure","registerPromise","post","then","res","data","catch","err","userInfoPromise","userInfo","type","REGISTER","payload","checkLogin","checkLoginPromise","fetch","credentials","json","CHECK_LOGIN"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,KAA4B;AAChD,QAAMC,eAAe,GAAGP,KAAK,CAACQ,IAAN,CAAY,GAAEN,GAAI,QAAlB,EAA2BE,IAA3B,EACnBK,IADmB,CACdC,GAAG,IAAI;AACT;AACA;AACAA,IAAAA,GAAG,CAACC,IAAJ,CAASN,OAAT,GACI,OAAOA,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,EAD5C,GAEI,OAAOC,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,EAF5C;AAGA,WAAOI,GAAP;AACH,GARmB,EASnBE,KATmB,CASbC,GAAG,IAAI;AACV,WAAOP,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,CAACO,GAAD,CAAxC;AACA,WAAOA,GAAP;AACH,GAZmB,CAAxB;AAeA,QAAMC,eAAe,GAAGd,KAAK,CAACQ,IAAN,CAAY,GAAEN,GAAI,QAAlB,EAA2Ba,QAA3B,EACnBN,IADmB,CACdC,GAAG,IAAI;AACT;AACA;AACAA,IAAAA,GAAG,CAACC,IAAJ,CAASN,OAAT,GACI,OAAOA,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,EAD5C,GAEI,OAAOC,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,EAF5C;AAGA,WAAOI,GAAP;AACH,GARmB,EASnBE,KATmB,CASbC,GAAG,IAAI;AACV,WAAOP,OAAP,KAAmB,UAAnB,IAAiCA,OAAO,CAACO,GAAD,CAAxC;AACA,WAAOA,GAAP;AACH,GAZmB,CAAxB;AAgBA,SAAO;AACHG,IAAAA,IAAI,EAAEf,YAAY,CAACgB,QADhB;AAEHC,IAAAA,OAAO,EAAEX;AAFN,GAAP;AAIH,CApCM;AAuCP,OAAO,MAAMY,UAAU,GAAG,MAAM;AAC5B,QAAMC,iBAAiB,GAAGC,KAAK,CAAC,kCAAD,EAAqC;AAACC,IAAAA,WAAW,EAAE;AAAd,GAArC,CAAL,CACrBb,IADqB,CAChBC,GAAG,IAAIA,GAAG,CAACa,IAAJ,EADS,EAErBX,KAFqB,EAA1B;AAGA,SAAO;AACHI,IAAAA,IAAI,EAAEf,YAAY,CAACuB,WADhB;AAEHN,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CARM","sourcesContent":["import axios from \"axios\";\nimport {appConstants} from \"../constants/constant\";\n\nconst API = 'http://localhost:8089';\n\nexport const register = (user, success, failure) => {\n    const registerPromise = axios.post(`${API}/users`, user)\n        .then(res => {\n            // TODO: check success and failure and make sure it's a function (tech debt)\n            // res.data.success ? success() : failure();\n            res.data.success ?\n                typeof success === 'function' && success() :\n                typeof failure === 'function' && failure();\n            return res;\n        })\n        .catch(err => {\n            typeof failure === 'function' && failure(err);\n            return err;\n        });\n\n\n    const userInfoPromise = axios.post(`${API}/users`, userInfo)\n        .then(res => {\n            // TODO: check success and failure and make sure it's a function (tech debt)\n            // res.data.success ? success() : failure();\n            res.data.success ?\n                typeof success === 'function' && success() :\n                typeof failure === 'function' && failure();\n            return res;\n        })\n        .catch(err => {\n            typeof failure === 'function' && failure(err);\n            return err;\n        });\n\n\n\n    return {\n        type: appConstants.REGISTER,\n        payload: registerPromise\n    };\n};\n\n\nexport const checkLogin = () => {\n    const checkLoginPromise = fetch('http://localhost:8089/checklogin', {credentials: 'include'})\n        .then(res => res.json())\n        .catch();\n    return {\n        type: appConstants.CHECK_LOGIN,\n        payload: checkLoginPromise\n    };\n};\n"]},"metadata":{},"sourceType":"module"}