{"ast":null,"code":"var _jsxFileName = \"/Users/shihaohuang/Documents/Mercury/community-management/client/src/user-page/PostReview.js\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box/Box\";\nimport Rating from \"@material-ui/lab/Rating/Rating\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { appConstants } from \"../constants/constant\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\n\nconst PostReview = () => {\n  const dispatch = useDispatch();\n\n  const setComment = event => {\n    const newReview = { ...review\n    };\n    newReview.comment = event.target.value;\n    setReview(newReview);\n  };\n\n  const setStar = event => {\n    const newReview = { ...review\n    };\n    newReview.star = event.target.value;\n    setReview(newReview);\n  };\n\n  const reviewState = useSelector(appState => {\n    return {\n      user: appState.user,\n      response: appState.response\n    };\n  });\n  const [review, setReview] = React.useState({\n    username: reviewState.user.username,\n    star: 3,\n    comment: '',\n    date: new Date()\n  });\n\n  const postReview = () => {\n    dispatch(postReview());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Controlled\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"simple-controlled\",\n    value: review.star,\n    onChange: setStar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"comment\",\n    label: \"comment\",\n    multiline: true,\n    fullWidth: true,\n    rows: 4,\n    value: review.comment,\n    onChange: setComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: postReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Post\"), /*#__PURE__*/React.createElement(Snackbar, {\n    className: reviewState.response ? 'success' : 'failure',\n    open: open,\n    onClose: () => setOpen(false),\n    autoHideDuration: 3000,\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }\n    }, reviewState.msg),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PostReview;","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/user-page/PostReview.js"],"names":["React","Box","Rating","Typography","TextField","useDispatch","useSelector","appConstants","Button","Snackbar","Paper","PostReview","dispatch","setComment","event","newReview","review","comment","target","value","setReview","setStar","star","reviewState","appState","user","response","useState","username","date","Date","postReview","open","setOpen","msg"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box/Box\";\nimport Rating from \"@material-ui/lab/Rating/Rating\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {appConstants} from \"../constants/constant\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\n\n\nconst PostReview = () => {\n\n    const dispatch = useDispatch();\n\n    const setComment = (event) => {\n        const newReview = {...review};\n        newReview.comment = event.target.value;\n        setReview(newReview);\n    };\n\n    const setStar = (event) => {\n        const newReview = {...review};\n        newReview.star = event.target.value;\n        setReview(newReview);\n    };\n\n    const reviewState = useSelector(appState => {\n        return {\n            user: appState.user,\n            response: appState.response\n        };\n    });\n\n    const [review, setReview] = React.useState(\n        {\n            username: reviewState.user.username,\n            star: 3,\n            comment: '',\n            date: new Date()\n        }\n    )\n\n\n    const postReview = () => {\n        dispatch(postReview());\n    }\n\n    return(\n        <div>\n\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                <Typography component=\"legend\">Controlled</Typography>\n                <Rating\n                    name=\"simple-controlled\"\n                    value={review.star}\n                    onChange={setStar}\n                />\n            </Box>\n\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"comment\"\n                label=\"comment\"\n                multiline\n                fullWidth\n                rows={4}\n                value={review.comment}\n                onChange={setComment}\n            />\n\n            <Button onClick = {postReview}>Post</Button>\n            <Snackbar\n                className={reviewState.response ? 'success' : 'failure'}\n                open={open}\n                onClose={() => setOpen(false)}\n                autoHideDuration={3000}\n                message={<span>{reviewState.msg}</span>}\n            />\n        </div>\n    );\n\n}\n\n\nexport default PostReview;"]},"metadata":{},"sourceType":"module"}