{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/shihaohuang/Documents/Mercury/community-management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/shihaohuang/Documents/Mercury/community-management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{makeStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import{useDispatch,useSelector}from\"react-redux\";import{putPayments}from\"../actions/userPayments.action\";import Button from\"@material-ui/core/Button/Button\";import Collapse from\"@material-ui/core/Collapse/Collapse\";import DialogTitle from\"@material-ui/core/DialogTitle/DialogTitle\";import Dialog from\"@material-ui/core/Dialog/Dialog\";import DialogContent from\"@material-ui/core/DialogContent/DialogContent\";import DialogActions from\"@material-ui/core/DialogActions/DialogActions\";import TextField from\"@material-ui/core/TextField/TextField\";var useStyles=makeStyles({table:{minWidth:650}});var Transaction=function Transaction(){var classes=useStyles();var dispatch=useDispatch();var transactionState=useSelector(function(appState){return{user:appState.user,userPayments:appState.userPayments};});var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),checked=_React$useState2[0],setChecked=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),open=_React$useState4[0],setOpen=_React$useState4[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var handleChange=function handleChange(){setChecked(function(prev){return!prev;});};// (function () {\n//     console.log('data: '+transactionState.userPayments);\n// })();\nvar pay=function pay(id){handleClose();var data=transactionState.userPayments;var holder;var _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var value=_step.value;if(id===value.id){holder=value;dispatch(putPayments(holder));}}}catch(err){_iterator.e(err);}finally{_iterator.f();}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{onClick:handleChange},\"Show my payment histories\"),/*#__PURE__*/React.createElement(Collapse,{in:checked},/*#__PURE__*/React.createElement(TableContainer,{component:Paper},/*#__PURE__*/React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Amount $\"),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},\"Memo\"),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},\"Date\"),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},\"Status\"))),/*#__PURE__*/React.createElement(TableBody,null,transactionState.userPayments?transactionState.userPayments.map(function(row){return/*#__PURE__*/React.createElement(TableRow,{key:row.id},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},row.amount),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},row.memo),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},row.date),row.status==='unpaid'?/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},/*#__PURE__*/React.createElement(\"div\",null,row.status,\" \",\" \",/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:handleClickOpen},\"Pay\"),/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-title\"},\"Online Banking Payment\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(TextField,{id:\"standard-required\",label:\"Bank routing number\",type:\"number\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TextField,{id:\"standard-password-input\",label:\"Account number\",type:\"password\"})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){pay(row.id);},color:\"primary\"},\"Pay now\"))))):/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},row.status));}):/*#__PURE__*/React.createElement(\"span\",null)))))),/*#__PURE__*/React.createElement(\"div\",null));};export default Transaction;","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/user-page/Transaction.js"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useDispatch","useSelector","putPayments","Button","Collapse","DialogTitle","Dialog","DialogContent","DialogActions","TextField","useStyles","table","minWidth","Transaction","classes","dispatch","transactionState","appState","user","userPayments","checked","setChecked","open","setOpen","handleClickOpen","handleClose","handleChange","prev","pay","id","data","holder","value","map","row","amount","memo","date","status"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {putPayments} from \"../actions/userPayments.action\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Collapse from \"@material-ui/core/Collapse/Collapse\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\n\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n\nconst Transaction = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const transactionState = useSelector(appState => {\n        return {\n            user: appState.user,\n            userPayments: appState.userPayments\n\n        };\n    });\n\n    const [checked, setChecked] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChange = () => {\n        setChecked((prev) => !prev);\n    };\n\n    // (function () {\n    //     console.log('data: '+transactionState.userPayments);\n    // })();\n\n    const pay = (id) => {\n        handleClose();\n        let data = transactionState.userPayments;\n        let holder;\n        for(let value of data)\n        {\n            if(id===value.id)\n            {\n                holder = value;\n                dispatch(putPayments(holder));\n            }\n\n        }\n\n\n    }\n\n            return (\n                <div>\n                <div>\n                    <Button onClick = {handleChange}>Show my payment histories</Button>\n                    <Collapse in={checked}>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Amount $</TableCell>\n                                        <TableCell align=\"left\">Memo</TableCell>\n                                        <TableCell align=\"left\">Date</TableCell>\n                                        <TableCell align=\"left\">Status</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n\n                                        transactionState.userPayments ?\n\n                                            transactionState.userPayments.map((row) => (\n                                        <TableRow key={row.id}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.amount}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.memo}</TableCell>\n                                            <TableCell align=\"left\">{row.date}</TableCell>\n                                            {\n\n                                                row.status === 'unpaid' ?\n                                                    <TableCell align=\"left\">\n                                                        <div>\n                                                            {row.status} {\" \"}\n                                                            <Button color=\"primary\" onClick={handleClickOpen}>Pay</Button>\n                                                            <Dialog\n                                                                open={open}\n                                                                onClose={handleClose}\n                                                                aria-labelledby=\"alert-dialog-title\"\n                                                                aria-describedby=\"alert-dialog-description\"\n                                                            >\n                                                                <DialogTitle id=\"alert-dialog-title\">{\"Online Banking Payment\"}</DialogTitle>\n                                                                <DialogContent>\n                                                                    <TextField\n                                                                        id=\"standard-required\"\n                                                                        label=\"Bank routing number\"\n                                                                        type = \"number\"\n                                                                    />\n                                                                    <br/>\n                                                                    <TextField\n                                                                        id=\"standard-password-input\"\n                                                                        label=\"Account number\"\n                                                                        type=\"password\"\n                                                                    />\n\n                                                                </DialogContent>\n                                                                <DialogActions>\n                                                                    <Button onClick = {() => {pay(row.id)}} color=\"primary\">\n                                                                        Pay now\n                                                                    </Button>\n                                                                </DialogActions>\n                                                            </Dialog>\n                                                        </div>\n                                                    </TableCell>\n                                                    :\n                                                    <TableCell align=\"left\">{row.status}</TableCell>\n                                            }\n                                        </TableRow>\n\n                                        ))\n                                        :\n                                            <span></span>\n\n                                    }\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Collapse>\n\n\n                </div>\n                <div>\n                </div>\n                </div>\n            );\n\n\n\n}\n\nexport default Transaction;\n\n\n"]},"metadata":{},"sourceType":"module"}