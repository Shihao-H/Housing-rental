{"ast":null,"code":"var _jsxFileName = \"/Users/shihaohuang/Documents/Mercury/community-management/client/src/MyFancyComponent.js\";\n\n/*global google*/\nimport React from \"react\";\nimport { compose, withProps, withHandlers, withState } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nconst MyMapComponent = compose(withProps({\n  googleMapURL: \"AIzaSyCD_NjwMKIxeMBW5-KhgH2cntfYZdTc2A0\",\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 27\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  })\n}), withScriptjs, withGoogleMap, withState('places', 'updatePlaces', ''), withHandlers(() => {\n  const refs = {\n    map: undefined\n  };\n  return {\n    onMapMounted: () => ref => {\n      refs.map = ref;\n    },\n    fetchPlaces: ({\n      updatePlaces\n    }) => {\n      let places;\n      const bounds = refs.map.getBounds();\n      const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n      const request = {\n        bounds: bounds,\n        type: ['hotel']\n      };\n      service.nearbySearch(request, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          console.log(results);\n          updatePlaces(results);\n        }\n      });\n    }\n  };\n}))(props => {\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    onTilesLoaded: props.fetchPlaces,\n    ref: props.onMapMounted,\n    onBoundsChanged: props.fetchPlaces,\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: 51.508530,\n      lng: -0.076132\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.places && props.places.map((place, i) => /*#__PURE__*/React.createElement(Marker, {\n    key: i,\n    position: {\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng()\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })));\n});\nexport default class MyFancyComponent extends React.PureComponent {\n  render() {\n    return /*#__PURE__*/React.createElement(MyMapComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/MyFancyComponent.js"],"names":["React","compose","withProps","withHandlers","withState","withScriptjs","withGoogleMap","GoogleMap","Marker","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","refs","map","undefined","onMapMounted","ref","fetchPlaces","updatePlaces","places","bounds","getBounds","service","google","maps","PlacesService","context","__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","request","type","nearbySearch","results","status","PlacesServiceStatus","OK","console","log","props","lat","lng","place","i","geometry","location","MyFancyComponent","PureComponent","render"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from \"react\"\nimport { compose, withProps, withHandlers, withState } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\nconst MyMapComponent = compose(\n    withProps({\n        googleMapURL: \"AIzaSyCD_NjwMKIxeMBW5-KhgH2cntfYZdTc2A0\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withScriptjs,\n    withGoogleMap,\n    withState('places', 'updatePlaces', ''),\n    withHandlers(() => {\n        const refs = {\n            map: undefined,\n        }\n\n        return {\n            onMapMounted: () => ref => {\n                refs.map = ref\n            },\n            fetchPlaces: ({ updatePlaces }) => {\n                let places;\n                const bounds = refs.map.getBounds();\n                const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                const request = {\n                    bounds: bounds,\n                    type: ['hotel']\n                };\n                service.nearbySearch(request, (results, status) => {\n                    if (status == google.maps.places.PlacesServiceStatus.OK) {\n                        console.log(results);\n                        updatePlaces(results);\n                    }\n                })\n            }\n        }\n    }),\n)((props) => {\n    return (\n        <GoogleMap\n            onTilesLoaded={props.fetchPlaces}\n            ref={props.onMapMounted}\n            onBoundsChanged={props.fetchPlaces}\n            defaultZoom={8}\n            defaultCenter={{ lat: 51.508530, lng: -0.076132 }}\n        >\n            {props.places && props.places.map((place, i) =>\n                <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} />\n            )}\n        </GoogleMap>\n    )\n})\n\nexport default class MyFancyComponent extends React.PureComponent {\n    render() {\n        return (\n            <MyMapComponent />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}