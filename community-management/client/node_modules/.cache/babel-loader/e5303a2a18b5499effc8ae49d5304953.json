{"ast":null,"code":"var _jsxFileName = \"/Users/shihaohuang/Documents/Mercury/community-management/client/src/user-page/Transaction.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { putPayments } from \"../actions/userPayments.action\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Collapse from \"@material-ui/core/Collapse/Collapse\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport { putTr } from \"../actions/tr.action\";\nimport { putEmailUs } from \"../actions/emailUs.action\";\nimport { putMaintenance } from \"../actions/maintenance.action\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst Transaction = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const transactionState = useSelector(appState => {\n    return {\n      user: appState.user,\n      userPayments: appState.userPayments\n    };\n  });\n  const [checked, setChecked] = React.useState(false);\n  const [data, setData] = useState(transactionState.userPayments);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = () => {\n    setChecked(prev => !prev);\n    console.log(transactionState.userPayments);\n  };\n\n  dispatch(putPayments(holder));\n\n  const pay = id => {\n    handleClose();\n    let holder;\n\n    for (let value of data) {\n      if (id === value.id) {\n        holder = value;\n        dispatch(putPayments(holder));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Show my payment histories\"), /*#__PURE__*/React.createElement(Collapse, {\n    in: checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }, \"Amount $\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, \"Memo\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 41\n    }\n  }, \"Status\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, data ? data.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 45\n    }\n  }, row.amount), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 45\n    }\n  }, row.memo), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 45\n    }\n  }, row.date), row.status === 'unpaid' ? /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 57\n    }\n  }, row.status, \" \", \" \", /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 61\n    }\n  }, \"Pay\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 65\n    }\n  }, \"Online Banking Payment\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-required\",\n    label: \"Bank routing number\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 69\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 69\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-password-input\",\n    label: \"Account number\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      pay(row.id);\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 69\n    }\n  }, \"Pay now\"))))) : /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 53\n    }\n  }, row.status))) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 45\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Transaction;","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/user-page/Transaction.js"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useDispatch","useSelector","putPayments","Button","Collapse","DialogTitle","Dialog","DialogContent","DialogActions","TextField","putTr","putEmailUs","putMaintenance","useStyles","table","minWidth","Transaction","classes","dispatch","transactionState","appState","user","userPayments","checked","setChecked","data","setData","open","setOpen","handleClickOpen","handleClose","handleChange","prev","console","log","holder","pay","id","value","map","row","amount","memo","date","status"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {putPayments} from \"../actions/userPayments.action\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Collapse from \"@material-ui/core/Collapse/Collapse\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport {putTr} from \"../actions/tr.action\";\nimport {putEmailUs} from \"../actions/emailUs.action\";\nimport {putMaintenance} from \"../actions/maintenance.action\";\n\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n\nconst Transaction = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const transactionState = useSelector(appState => {\n        return {\n            user: appState.user,\n            userPayments: appState.userPayments\n\n        };\n    });\n\n    const [checked, setChecked] = React.useState(false);\n    const [data, setData] = useState(transactionState.userPayments);\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChange = () => {\n        setChecked((prev) => !prev);\n        console.log(transactionState.userPayments);\n    };\n\n    dispatch(putPayments(holder));\n\n    const pay = (id) => {\n        handleClose();\n\n        let holder;\n        for(let value of data)\n        {\n            if(id===value.id)\n            {\n                holder = value;\n                dispatch(putPayments(holder));\n            }\n\n        }\n\n\n    }\n\n            return (\n                <div>\n                <div>\n                    <Button onClick = {handleChange}>Show my payment histories</Button>\n                    <Collapse in={checked}>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Amount $</TableCell>\n                                        <TableCell align=\"left\">Memo</TableCell>\n                                        <TableCell align=\"left\">Date</TableCell>\n                                        <TableCell align=\"left\">Status</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n\n                                        data ?\n\n                                        data.map((row) => (\n                                        <TableRow key={row.id}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.amount}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.memo}</TableCell>\n                                            <TableCell align=\"left\">{row.date}</TableCell>\n                                            {\n\n                                                row.status === 'unpaid' ?\n                                                    <TableCell align=\"left\">\n                                                        <div>\n                                                            {row.status} {\" \"}\n                                                            <Button color=\"primary\" onClick={handleClickOpen}>Pay</Button>\n                                                            <Dialog\n                                                                open={open}\n                                                                onClose={handleClose}\n                                                                aria-labelledby=\"alert-dialog-title\"\n                                                                aria-describedby=\"alert-dialog-description\"\n                                                            >\n                                                                <DialogTitle id=\"alert-dialog-title\">{\"Online Banking Payment\"}</DialogTitle>\n                                                                <DialogContent>\n                                                                    <TextField\n                                                                        id=\"standard-required\"\n                                                                        label=\"Bank routing number\"\n                                                                        type = \"number\"\n                                                                    />\n                                                                    <br/>\n                                                                    <TextField\n                                                                        id=\"standard-password-input\"\n                                                                        label=\"Account number\"\n                                                                        type=\"password\"\n                                                                    />\n\n                                                                </DialogContent>\n                                                                <DialogActions>\n                                                                    <Button onClick = {() => {pay(row.id)}} color=\"primary\">\n                                                                        Pay now\n                                                                    </Button>\n                                                                </DialogActions>\n                                                            </Dialog>\n                                                        </div>\n                                                    </TableCell>\n                                                    :\n                                                    <TableCell align=\"left\">{row.status}</TableCell>\n                                            }\n                                        </TableRow>\n\n                                        ))\n                                        :\n                                            <span></span>\n\n                                    }\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Collapse>\n\n\n                </div>\n                <div>\n                </div>\n                </div>\n            );\n\n\n\n}\n\nexport default Transaction;\n\n\n"]},"metadata":{},"sourceType":"module"}