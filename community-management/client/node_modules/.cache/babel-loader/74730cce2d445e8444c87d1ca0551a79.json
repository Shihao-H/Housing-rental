{"ast":null,"code":"var _jsxFileName = \"/Users/shihaohuang/Documents/Mercury/community-management/client/src/interactions/FormDialog.js\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DatePicker from \"react-datepicker\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from \"clsx\";\nimport { tourReserve } from \"../actions/tr.action\";\nimport { applyMiddleware as dispatch } from \"redux\";\nimport TimePicker from 'react-time-picker';\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup/ToggleButtonGroup\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton/ToggleButton\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    width: '25ch'\n  },\n  root: {\n    background: \"blue\"\n  },\n  whiteColor: {\n    color: \"white\"\n  }\n}));\nexport default function FormDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [alignment, setAlignment] = React.useState('left');\n  const [tr, setTr] = useState({\n    firstname: '',\n    lastname: '',\n    floorplan: '',\n    phone: '',\n    email: '',\n    date: '',\n    time: '',\n    sms: false,\n    status: 'not finished'\n  });\n\n  const onTimeChange = time => {\n    const newTr = { ...tr\n    };\n    newTr.time = time;\n    setTr(newTr);\n  };\n\n  const handlePickDate = date => {\n    const newTr = { ...tr\n    };\n    newTr.date = date;\n    setTr(newTr);\n  };\n\n  const handleChange = event => {\n    // console.log(event.target.value);\n    const newTr = { ...tr\n    };\n    newTr.floorplan = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFormControl = event => {\n    const newTr = { ...tr\n    };\n    newTr.firstname = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleFormControl2 = event => {\n    const newTr = { ...tr\n    };\n    newTr.lastname = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleFormControl3 = event => {\n    const newTr = { ...tr\n    };\n    newTr.email = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleFormControl4 = event => {\n    const newTr = { ...tr\n    };\n    newTr.phone = event.target.value;\n    setTr(newTr);\n  };\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const handleSubmit = event => {\n    console.log(tr);\n    setOpen(false);\n    event.preventDefault();\n    dispatch(tourReserve(tr, () => {\n      setOpen(false);\n    }, () => setOpen(true)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Schedule a tour\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Schedule a tour\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Is there a particular floor plan you would like to tour?\"), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    classes: {\n      // root: classes.whiteColor,\n      icon: classes.whiteColor\n    },\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: tr.floorplan,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'No, Thank you',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, \"No, Thank you\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '1x1(1 bed, 1 bath)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, \"1x1(1 bed, 1 bath)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '2x2(2 bed, 2 bath)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, \"2x2(2 bed, 2 bath)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '3x3(3 bed, 3 bath)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, \"3x3(3 bed, 3 bath)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '4x4(4 bed, 4 bath)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, \"4x4(4 bed, 4 bath)\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: tr.date,\n    onChange: handlePickDate,\n    minDate: new Date(new Date().valueOf() + 1000 * 3600 * 24),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    label: \"Alarm clock\",\n    type: \"time\",\n    defaultValue: \"07:30\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 300 // 5 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"Would you like us to send you SMS alert?\"), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: alignment,\n    exclusive: true,\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"yes\",\n    \"aria-label\": \"yes-b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"no\",\n    \"aria-label\": \"no-b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, \"No\")), /*#__PURE__*/React.createElement(TextField, {\n    className: clsx(classes.margin, classes.textField),\n    autoFocus: true,\n    margin: \"dense\",\n    required: true,\n    id: \"first-name\",\n    label: \"First Name\",\n    value: tr.firstname,\n    onChange: handleFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: clsx(classes.margin, classes.textField),\n    autoFocus: true,\n    margin: \"dense\",\n    required: true,\n    id: \"last-name\",\n    label: \"Last Name\",\n    value: tr.lastname,\n    onChange: handleFormControl2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    required: true,\n    id: \"email\",\n    label: \"Email Address\",\n    type: \"email\",\n    fullWidth: true,\n    value: tr.email,\n    onChange: handleFormControl3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    required: true,\n    id: \"phone\",\n    label: \"Phone\",\n    type: \"number\",\n    fullWidth: true,\n    value: tr.phone,\n    onChange: handleFormControl4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, \"Schedule\"))));\n}","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/interactions/FormDialog.js"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","DatePicker","Select","MenuItem","FormControl","makeStyles","clsx","tourReserve","applyMiddleware","dispatch","TimePicker","ToggleButtonGroup","ToggleButton","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","textField","width","root","background","whiteColor","color","FormDialog","classes","open","setOpen","alignment","setAlignment","tr","setTr","firstname","lastname","floorplan","phone","email","date","time","sms","status","onTimeChange","newTr","handlePickDate","handleChange","event","target","value","handleClickOpen","handleClose","handleFormControl","handleFormControl2","handleFormControl3","handleFormControl4","handleAlignment","newAlignment","handleSubmit","console","log","preventDefault","icon","Date","valueOf","shrink","step"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DatePicker from \"react-datepicker\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from \"clsx\";\nimport {tourReserve} from \"../actions/tr.action\";\nimport {applyMiddleware as dispatch} from \"redux\";\nimport TimePicker from 'react-time-picker';\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup/ToggleButtonGroup\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton/ToggleButton\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        width: '25ch',\n    },\n    root: {\n        background: \"blue\",\n    },\n    whiteColor: {\n        color: \"white\"\n    }\n}));\n\n\nexport default function FormDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [alignment, setAlignment] = React.useState('left');\n\n    const [tr, setTr] = useState({\n        firstname: '',\n        lastname: '',\n        floorplan: '',\n        phone: '',\n        email: '',\n        date: '',\n        time: '',\n        sms: false,\n        status: 'not finished'\n    });\n\n    const onTimeChange = time => {\n        const newTr = {...tr};\n        newTr.time = time;\n        setTr(newTr);\n    }\n\n\n    const handlePickDate = date => {\n        const newTr = {...tr};\n        newTr.date = date;\n        setTr(newTr);\n    };\n\n\n    const handleChange = (event) => {\n        // console.log(event.target.value);\n        const newTr = {...tr};\n        newTr.floorplan = event.target.value;\n        setTr(newTr);\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleFormControl = (event) => {\n        const newTr = {...tr};\n        newTr.firstname = event.target.value;\n        setTr(newTr);\n    };\n\n    const handleFormControl2 = (event) => {\n        const newTr = {...tr};\n        newTr.lastname = event.target.value;\n        setTr(newTr);\n    };\n\n    const handleFormControl3 = (event) => {\n        const newTr = {...tr};\n        newTr.email = event.target.value;\n        setTr(newTr);\n    };\n\n\n    const handleFormControl4 = (event) => {\n        const newTr = {...tr};\n        newTr.phone = event.target.value;\n        setTr(newTr);\n    };\n\n    const handleAlignment = (event, newAlignment) => {\n        setAlignment(newAlignment);\n    };\n\n    const handleSubmit = (event) => {\n        console.log(tr);\n        setOpen(false);\n        event.preventDefault();\n        dispatch(tourReserve(\n            tr,\n            () => {\n                setOpen(false);\n            },\n            () => setOpen(true)\n        ));\n    };\n\n\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Schedule a tour\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Schedule a tour</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Is there a particular floor plan you would like to tour?\n                    </DialogContentText>\n                    <FormControl>\n                        {/*<InputLabel id=\"demo-simple-select-label\">Floor plan name</InputLabel>*/}\n                        <Select\n                            classes={{\n                                // root: classes.whiteColor,\n                                icon: classes.whiteColor\n                            }}\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={tr.floorplan}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'No, Thank you'}>No, Thank you</MenuItem>\n                            <MenuItem value={'1x1(1 bed, 1 bath)'}>1x1(1 bed, 1 bath)</MenuItem>\n                            <MenuItem value={'2x2(2 bed, 2 bath)'}>2x2(2 bed, 2 bath)</MenuItem>\n                            <MenuItem value={'3x3(3 bed, 3 bath)'}>3x3(3 bed, 3 bath)</MenuItem>\n                            <MenuItem value={'4x4(4 bed, 4 bath)'}>4x4(4 bed, 4 bath)</MenuItem>\n                        </Select>\n                    <br/>\n                    <br/>\n\n                    <DatePicker\n                        selected={tr.date}\n                        onChange={handlePickDate}\n                        minDate={new Date((new Date()).valueOf() + 1000*3600*24)}\n                    />\n\n                    <br/>\n                    <br/>\n\n                    {/*<TimePicker*/}\n                        {/*onChange={onTimeChange}*/}\n                        {/*value={tr.time}*/}\n                    {/*/>*/}\n                        <TextField\n                            id=\"time\"\n                            label=\"Alarm clock\"\n                            type=\"time\"\n                            defaultValue=\"07:30\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputProps={{\n                                step: 300, // 5 min\n                            }}\n                        />\n\n\n\n                    <br/>\n                    <br/>\n\n                    <DialogContentText>\n                        Would you like us to send you SMS alert?\n                    </DialogContentText>\n\n                    <ToggleButtonGroup\n                        value={alignment}\n                        exclusive\n                        onChange={handleAlignment}\n                        aria-label=\"text alignment\"\n                    >\n                        <ToggleButton value=\"yes\" aria-label=\"yes-b\">\n                            Yes\n                        </ToggleButton>\n                        <ToggleButton value=\"no\" aria-label=\"no-b\">\n                            No\n                        </ToggleButton>\n\n                    </ToggleButtonGroup>\n\n                    <TextField\n                        className={clsx(classes.margin, classes.textField)}\n                        autoFocus\n                        margin=\"dense\"\n                        required id=\"first-name\"\n                        label=\"First Name\"\n                        value={tr.firstname}\n                        onChange={handleFormControl}\n                    />\n                    <TextField\n                        className={clsx(classes.margin, classes.textField)}\n                        autoFocus\n                        margin=\"dense\"\n                        required id=\"last-name\"\n                        label=\"Last Name\"\n                        value={tr.lastname}\n                        onChange={handleFormControl2}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        required id=\"email\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                        value={tr.email}\n                        onChange={handleFormControl3}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        required id=\"phone\"\n                        label=\"Phone\"\n                        type=\"number\"\n                        fullWidth\n                        value={tr.phone}\n                        onChange={handleFormControl4}\n                    />\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Schedule\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}