{"ast":null,"code":"var _jsxFileName = \"/Users/shihaohuang/Documents/Mercury/community-management/client/src/admin-page/AdminApplication.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 15\n  }\n})));\n\nconst AdminApplication = () => {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.checkedA,\n      onChange: handleChange,\n      name: \"checkedA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }\n    }),\n    label: \"Secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.checkedB,\n      onChange: handleChange,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }),\n    label: \"Primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      name: \"checkedC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 40\n      }\n    }),\n    label: \"Uncontrolled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.checkedF,\n      onChange: handleChange,\n      name: \"checkedF\",\n      indeterminate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }),\n    label: \"Indeterminate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      checked: state.checkedG,\n      onChange: handleChange,\n      name: \"checkedG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 26\n      }\n    }),\n    label: \"Custom color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      icon: /*#__PURE__*/React.createElement(FavoriteBorder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 42\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(Favorite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 75\n        }\n      }),\n      name: \"checkedH\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }\n    }),\n    label: \"Custom icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      icon: /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 31\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(CheckBoxIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 38\n        }\n      }),\n      name: \"checkedI\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }),\n    label: \"Custom size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AdminApplication;","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/admin-page/AdminApplication.js"],"names":["React","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","GreenCheckbox","root","color","checked","props","AdminApplication","state","setState","useState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst GreenCheckbox = withStyles({\n    root: {\n        color: green[400],\n        '&$checked': {\n            color: green[600],\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\n\nconst AdminApplication = () => {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedF: true,\n        checkedG: true,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Secondary\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.checkedB}\n                        onChange={handleChange}\n                        name=\"checkedB\"\n                        color=\"primary\"\n                    />\n                }\n                label=\"Primary\"\n            />\n            <FormControlLabel control={<Checkbox name=\"checkedC\" />} label=\"Uncontrolled\" />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.checkedF}\n                        onChange={handleChange}\n                        name=\"checkedF\"\n                        indeterminate\n                    />\n                }\n                label=\"Indeterminate\"\n            />\n            <FormControlLabel\n                control={<GreenCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\n                label=\"Custom color\"\n            />\n            <FormControlLabel\n                control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} name=\"checkedH\" />}\n                label=\"Custom icon\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                        name=\"checkedI\"\n                    />\n                }\n                label=\"Custom size\"\n            />\n        </FormGroup>\n    );\n}\n\nexport default AdminApplication;\n\n"]},"metadata":{},"sourceType":"module"}