{"ast":null,"code":"var _jsxFileName = \"/Users/shihaohuang/Documents/Mercury/community-management/client/src/TourScheduler.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nconst EditProductSchema = Yup.object().shape({\n  name: Yup.string().required('Product name is required'),\n  brand: Yup.string().required('Product brand is required'),\n  price: Yup.number().min(0, 'Product price has to be positive').required('Product price is required'),\n  stock: Yup.number().min(0, 'Product stock has to be positive').required('Product stock is required')\n});\n\nclass TourScheduler extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      floorPlan: '',\n      date: new Date()\n    };\n\n    this.setFloorPlan = event => this.setState({\n      floorPlan: event.target.value\n    });\n\n    this.handleChange = date => this.setState({\n      date\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Is there a particular floor plan you would like to tour?\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.setFloorPlan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"No, Thank you\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"1x1(1 bed, 1 bath)\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"2x2(2 bed, 2 bath)\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"3x3(3 bed, 3 bath)\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"4x4(4 bed, 4 bath)\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, this.state.floorPlan), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.handleChange,\n      minDate: new Date(new Date().valueOf() + 1000 * 3600 * 24),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      elevation: 3,\n      className: \"EditProduct\",\n      ref: this.wrapperRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Last bit of information and we are all set\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.props.product,\n      onSubmit: this.handleSubmit,\n      validationSchema: EditProductSchema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, appConstants.PRODUCT_FIELDS.map(field => /*#__PURE__*/React.createElement(Field, {\n      key: field.displayName,\n      name: field.name,\n      type: field.type,\n      label: field.displayName,\n      component: EditProduct.renderField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"Done\")))));\n  }\n\n}\n\n;\nexport default TourScheduler;","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/TourScheduler.js"],"names":["React","Component","DatePicker","Paper","EditProductSchema","Yup","object","shape","name","string","required","brand","price","number","min","stock","TourScheduler","state","floorPlan","date","Date","setFloorPlan","event","setState","target","value","handleChange","render","valueOf","wrapperRef","props","product","handleSubmit","appConstants","PRODUCT_FIELDS","map","field","displayName","type","EditProduct","renderField"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\n\n\nconst EditProductSchema = Yup.object().shape({\n    name: Yup.string()\n        .required('Product name is required'),\n    brand: Yup.string()\n        .required('Product brand is required'),\n    price: Yup.number()\n        .min(0, 'Product price has to be positive')\n        .required('Product price is required'),\n    stock: Yup.number()\n        .min(0, 'Product stock has to be positive')\n        .required('Product stock is required'),\n});\n\n\n\n\n\nclass TourScheduler extends Component {\n    state = {\n        floorPlan : '',\n        date: new Date()\n    }\n\n    setFloorPlan = event => this.setState({floorPlan : event.target.value});\n\n    handleChange = date => this.setState({ date });\n\n    render() {\n        return (\n            <div>\n                <p>Is there a particular floor plan you would like to tour?</p>\n                <select onChange={this.setFloorPlan}>\n                    <option>No, Thank you</option>\n                    <option>1x1(1 bed, 1 bath)</option>\n                    <option>2x2(2 bed, 2 bath)</option>\n                    <option>3x3(3 bed, 3 bath)</option>\n                    <option>4x4(4 bed, 4 bath)</option>\n                </select>\n                <p>{this.state.floorPlan}</p>\n                <DatePicker\n                    selected={this.state.date}\n                    onChange={this.handleChange}\n                    minDate={new Date((new Date()).valueOf() + 1000*3600*24)}\n                />\n                <Paper elevation={3} className=\"EditProduct\" ref={this.wrapperRef}>\n                    <h2>Last bit of information and we are all set</h2>\n                    <Formik\n                        initialValues={this.props.product}\n                        onSubmit={this.handleSubmit}\n                        validationSchema={EditProductSchema}\n                    >\n                        <Form className=\"form-group\">\n                            {\n                                appConstants.PRODUCT_FIELDS.map(field => (\n                                    <Field\n                                        key={field.displayName}\n                                        name={field.name}\n                                        type={field.type}\n                                        label={field.displayName}\n                                        component={EditProduct.renderField}\n                                    />\n                                ))\n                            }\n                            <Button type=\"submit\" color=\"primary\">Done</Button>\n                        </Form>\n                    </Formik>\n                </Paper>\n            </div>\n        );\n    }\n};\n\n\nexport default TourScheduler;\n"]},"metadata":{},"sourceType":"module"}