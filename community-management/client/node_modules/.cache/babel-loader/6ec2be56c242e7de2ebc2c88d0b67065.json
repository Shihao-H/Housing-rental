{"ast":null,"code":"var _jsxFileName = \"/Users/shihaohuang/Documents/Mercury/community-management/client/src/admin-page/AdminIssueBill.js\";\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { issueBill, issueMonthly } from \"../actions/issurBill.action\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport { appConstants } from \"../constants/constant\";\n\nconst AdminIssueBill = () => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(false);\n  const issueBillState = useSelector(appState => {\n    return {\n      response3: appState.response3,\n      response4: appState.response4,\n      msg: appState.response3 ? appConstants.ISSUE_MONTHLY_SUCCESS_MESSAGE : appConstants.ISSUE_MONTHLY_FAILURE_MESSAGE,\n      msg2: appState.response4 ? appConstants.ISSUE_BILL_SUCCESS_MESSAGE : appConstants.ISSUE_MONTHLY_FAILURE_MESSAGE\n    };\n  });\n  const [ph, setPh] = useState({\n    uid: '',\n    amount: '',\n    memo: '',\n    date: new Date()\n  });\n  const [month, setMonth] = useState({\n    amount: '',\n    memo: '',\n    type: '',\n    date: new Date()\n  });\n\n  const f1 = event => {\n    const newPh = { ...ph\n    };\n    newPh.uid = event.target.value;\n    setMonth(newPh);\n  };\n\n  const f2 = event => {\n    const newPh = { ...ph\n    };\n    newPh.amount = event.target.value;\n    setMonth(newPh);\n  };\n\n  const f3 = event => {\n    const newPh = { ...ph\n    };\n    newPh.memo = event.target.value;\n    setMonth(newPh);\n  };\n\n  const f4 = event => {\n    const newMonth = { ...month\n    };\n    newMonth.amount = event.target.value;\n    setMonth(newMonth);\n  };\n\n  const f5 = event => {\n    console.log(event.target.value);\n    const newMonth = { ...month\n    };\n    newMonth.memo = event.target.value;\n    setMonth(newMonth);\n  };\n\n  const f6 = event => {\n    const newMonth = { ...month\n    };\n    newMonth.type = event.target.value;\n    setMonth(newMonth);\n  };\n\n  const monthly = event => {\n    event.preventDefault();\n    console.log(month);\n    dispatch(issueMonthly(month, () => {\n      setOpen(true);\n    }, () => {\n      setOpen(true);\n    }));\n  };\n\n  const single = event => {\n    event.preventDefault();\n    dispatch(issueBill(ph, () => {\n      setOpen2(true);\n    }, () => {\n      setOpen2(true);\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Issue bill to a specific user\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"User_id:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    onChange: f1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Amount:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    onChange: f2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Memo:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: f3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: single,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Issue\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Issue monthly payments to active users\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Amount:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    onChange: f4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Memo:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: f5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Type:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"type\",\n    id: \"cars\",\n    onChange: f6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Studio\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"2x2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"3x3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"4\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: monthly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Issue\"), /*#__PURE__*/React.createElement(Snackbar, {\n    className: issueBillState.response3 ? 'success' : 'failure',\n    open: open,\n    onClose: () => setOpen(false),\n    autoHideDuration: 3000,\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 26\n      }\n    }, issueBillState.msg),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    className: issueBillState.response4 ? 'success' : 'failure',\n    open: open2,\n    onClose: () => setOpen2(false),\n    autoHideDuration: 3000,\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 26\n      }\n    }, issueBillState.msg2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AdminIssueBill;","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/client/src/admin-page/AdminIssueBill.js"],"names":["React","useState","Button","useDispatch","useSelector","issueBill","issueMonthly","Snackbar","appConstants","AdminIssueBill","dispatch","open","setOpen","open2","setOpen2","issueBillState","appState","response3","response4","msg","ISSUE_MONTHLY_SUCCESS_MESSAGE","ISSUE_MONTHLY_FAILURE_MESSAGE","msg2","ISSUE_BILL_SUCCESS_MESSAGE","ph","setPh","uid","amount","memo","date","Date","month","setMonth","type","f1","event","newPh","target","value","f2","f3","f4","newMonth","f5","console","log","f6","monthly","preventDefault","single"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Button from \"@material-ui/core/Button/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {issueBill, issueMonthly} from \"../actions/issurBill.action\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport {appConstants} from \"../constants/constant\";\n\nconst AdminIssueBill = () => {\n\n    const dispatch = useDispatch();\n\n    const [open, setOpen] = useState(false);\n\n    const [open2, setOpen2] = useState(false);\n\n    const issueBillState = useSelector(appState => {\n        return {\n            response3: appState.response3,\n            response4: appState.response4,\n            msg: appState.response3 ?\n                appConstants.ISSUE_MONTHLY_SUCCESS_MESSAGE:\n                appConstants.ISSUE_MONTHLY_FAILURE_MESSAGE,\n\n            msg2: appState.response4 ?\n                appConstants.ISSUE_BILL_SUCCESS_MESSAGE:\n                appConstants.ISSUE_MONTHLY_FAILURE_MESSAGE\n        };\n    });\n\n    const [ph, setPh] = useState({\n        uid: '',\n        amount: '',\n        memo: '',\n        date: new Date()\n    });\n\n    const [month, setMonth] = useState({\n        amount: '',\n        memo: '',\n        type: '',\n        date: new Date()\n    });\n\n    const f1 = (event) => {\n        const newPh = {...ph};\n        newPh.uid = event.target.value;\n        setMonth(newPh);\n    };\n\n    const f2 = (event) => {\n        const newPh = {...ph};\n        newPh.amount = event.target.value;\n        setMonth(newPh);\n    };\n\n    const f3 = (event) => {\n        const newPh = {...ph};\n        newPh.memo = event.target.value;\n        setMonth(newPh);\n    };\n\n    const f4 = (event) => {\n        const newMonth = {...month};\n        newMonth.amount = event.target.value;\n        setMonth(newMonth);\n    };\n\n    const f5 = (event) => {\n        console.log(event.target.value);\n        const newMonth = {...month};\n        newMonth.memo = event.target.value;\n        setMonth(newMonth);\n    };\n\n    const f6 = (event) => {\n        const newMonth = {...month};\n        newMonth.type = event.target.value;\n        setMonth(newMonth);\n    };\n\n\n\n    const monthly = (event) => {\n        event.preventDefault();\n        console.log(month);\n        dispatch(issueMonthly(month,\n                () => {\n                    setOpen(true);\n                },\n                () => {\n                    setOpen(true)\n                }\n            )\n        );\n\n    }\n\n    const single = (event) => {\n        event.preventDefault();\n        dispatch(issueBill(ph,\n            () => {\n                setOpen2(true);\n            },\n            () => {\n                setOpen2(true)\n            }\n\n        ));\n\n\n    }\n\n\n    return (\n        <div>\n            <h3>Issue bill to a specific user</h3>\n            <label>User_id:</label><br/>\n            <input type=\"number\" onChange={f1}/><br/>\n            <label>Amount:</label><br/>\n            <input type=\"number\" onChange={f2}/><br/>\n            <label>Memo:</label><br/>\n            <input type=\"text\" onChange={f3}/><br/>\n            <Button color = \"primary\" onClick = {single}>Issue</Button>\n\n            <h3>Issue monthly payments to active users</h3>\n            <label>Amount:</label><br/>\n            <input type=\"number\" onChange={f4}/><br/>\n            <label>Memo:</label><br/>\n            <input type=\"text\" onChange={f5}/><br/>\n            <label>Type:</label><br/>\n            <select name=\"type\" id=\"cars\" onChange={f6}>\n                <option value=\"1\">Studio</option>\n                <option value=\"2\">2x2</option>\n                <option value=\"3\">3x3</option>\n                <option value=\"4\">4</option>\n            </select>\n            <br/>\n            <Button color = \"primary\" onClick = {monthly}>Issue</Button>\n\n\n            <Snackbar\n                className={issueBillState.response3 ? 'success' : 'failure'}\n                open={open}\n                onClose={() => setOpen(false)}\n                autoHideDuration={3000}\n                message={<span>{issueBillState.msg}</span>}\n            />\n            <Snackbar\n                className={issueBillState.response4 ? 'success' : 'failure'}\n                open={open2}\n                onClose={() => setOpen2(false)}\n                autoHideDuration={3000}\n                message={<span>{issueBillState.msg2}</span>}\n            />\n        </div>\n    );\n\n\n}\n\nexport default AdminIssueBill;"]},"metadata":{},"sourceType":"module"}