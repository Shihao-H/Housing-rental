{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _NativeSelectInput = _interopRequireDefault(require(\"./NativeSelectInput\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _formControlState = _interopRequireDefault(require(\"../FormControl/formControlState\"));\n\nvar _useFormControl = _interopRequireDefault(require(\"../FormControl/useFormControl\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the select component `root` class. */\n    root: {},\n\n    /* Styles applied to the select component `select` class. */\n    select: {\n      '-moz-appearance': 'none',\n      // Reset\n      '-webkit-appearance': 'none',\n      // Reset\n      // When interacting quickly, the text can end up selected.\n      // Native select can't be selected either.\n      userSelect: 'none',\n      borderRadius: 0,\n      // Reset\n      minWidth: 16,\n      // So it doesn't collapse.\n      cursor: 'pointer',\n      '&:focus': {\n        // Show that it's not an text input\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',\n        borderRadius: 0 // Reset Chrome style\n\n      },\n      // Remove IE 11 arrow\n      '&::-ms-expand': {\n        display: 'none'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      },\n      '&[multiple]': {\n        height: 'auto'\n      },\n      '&:not([multiple]) option, &:not([multiple]) optgroup': {\n        backgroundColor: theme.palette.background.paper\n      },\n      '&&': {\n        paddingRight: 24\n      }\n    },\n\n    /* Styles applied to the select component if `variant=\"filled\"`. */\n    filled: {\n      '&&': {\n        paddingRight: 32\n      }\n    },\n\n    /* Styles applied to the select component if `variant=\"outlined\"`. */\n    outlined: {\n      borderRadius: theme.shape.borderRadius,\n      '&&': {\n        paddingRight: 32\n      }\n    },\n\n    /* Styles applied to the select component `selectMenu` class. */\n    selectMenu: {\n      height: 'auto',\n      // Resets for multpile select with chips\n      minHeight: '1.1876em',\n      // Required for select\\text-field height consistency\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n\n    /* Pseudo-class applied to the select component `disabled` class. */\n    disabled: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      // We use a position absolute over a flexbox in order to forward the pointer events\n      // to the input and to support wrapping tags..\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 12px)',\n      // Center vertically\n      pointerEvents: 'none',\n      // Don't block pointer events on the select under the icon.\n      color: theme.palette.action.active,\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the icon component if the popup is open. */\n    iconOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the icon component if `variant=\"filled\"`. */\n    iconFilled: {\n      right: 7\n    },\n\n    /* Styles applied to the icon component if `variant=\"outlined\"`. */\n    iconOutlined: {\n      right: 7\n    }\n  };\n};\n\nexports.styles = styles;\nvar defaultInput = /*#__PURE__*/React.createElement(_Input.default, null);\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\n\nvar NativeSelect = React.forwardRef(function NativeSelect(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? _ArrowDropDown.default : _props$IconComponent,\n      _props$input = props.input,\n      input = _props$input === void 0 ? defaultInput : _props$input,\n      inputProps = props.inputProps,\n      variant = props.variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"]);\n  var muiFormControl = (0, _useFormControl.default)();\n  var fcs = (0, _formControlState.default)({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant']\n  });\n  return React.cloneElement(input, (0, _extends2.default)({\n    // Most of the logic is implemented in `NativeSelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: _NativeSelectInput.default,\n    inputProps: (0, _extends2.default)((0, _extends2.default)({\n      children: children,\n      classes: classes,\n      IconComponent: IconComponent,\n      variant: fcs.variant,\n      type: undefined\n    }, inputProps), input ? input.props.inputProps : {}),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: _propTypes.default.elementType,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: _propTypes.default.element,\n\n  /**\n   * Attributes applied to the `select` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The input value. The DOM API casts this to a string.\n   */\n  value: _propTypes.default.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: _propTypes.default.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiNativeSelect'\n})(NativeSelect);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/shihaohuang/Documents/Mercury/community-management/node_modules/@material-ui/core/NativeSelect/NativeSelect.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","styles","_extends2","_objectWithoutProperties2","React","_propTypes","_NativeSelectInput","_withStyles","_formControlState","_useFormControl","_ArrowDropDown","_Input","theme","root","select","userSelect","borderRadius","minWidth","cursor","backgroundColor","palette","type","display","height","background","paper","paddingRight","filled","outlined","shape","selectMenu","minHeight","textOverflow","whiteSpace","overflow","disabled","icon","position","right","top","pointerEvents","color","action","active","iconOpen","transform","iconFilled","iconOutlined","defaultInput","createElement","NativeSelect","forwardRef","props","ref","children","classes","_props$IconComponent","IconComponent","_props$input","input","inputProps","variant","other","muiFormControl","fcs","states","cloneElement","inputComponent","undefined","process","env","NODE_ENV","propTypes","node","object","elementType","element","onChange","func","any","oneOf","muiName","_default","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _NativeSelectInput = _interopRequireDefault(require(\"./NativeSelectInput\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _formControlState = _interopRequireDefault(require(\"../FormControl/formControlState\"));\n\nvar _useFormControl = _interopRequireDefault(require(\"../FormControl/useFormControl\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the select component `root` class. */\n    root: {},\n\n    /* Styles applied to the select component `select` class. */\n    select: {\n      '-moz-appearance': 'none',\n      // Reset\n      '-webkit-appearance': 'none',\n      // Reset\n      // When interacting quickly, the text can end up selected.\n      // Native select can't be selected either.\n      userSelect: 'none',\n      borderRadius: 0,\n      // Reset\n      minWidth: 16,\n      // So it doesn't collapse.\n      cursor: 'pointer',\n      '&:focus': {\n        // Show that it's not an text input\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',\n        borderRadius: 0 // Reset Chrome style\n\n      },\n      // Remove IE 11 arrow\n      '&::-ms-expand': {\n        display: 'none'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      },\n      '&[multiple]': {\n        height: 'auto'\n      },\n      '&:not([multiple]) option, &:not([multiple]) optgroup': {\n        backgroundColor: theme.palette.background.paper\n      },\n      '&&': {\n        paddingRight: 24\n      }\n    },\n\n    /* Styles applied to the select component if `variant=\"filled\"`. */\n    filled: {\n      '&&': {\n        paddingRight: 32\n      }\n    },\n\n    /* Styles applied to the select component if `variant=\"outlined\"`. */\n    outlined: {\n      borderRadius: theme.shape.borderRadius,\n      '&&': {\n        paddingRight: 32\n      }\n    },\n\n    /* Styles applied to the select component `selectMenu` class. */\n    selectMenu: {\n      height: 'auto',\n      // Resets for multpile select with chips\n      minHeight: '1.1876em',\n      // Required for select\\text-field height consistency\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n\n    /* Pseudo-class applied to the select component `disabled` class. */\n    disabled: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      // We use a position absolute over a flexbox in order to forward the pointer events\n      // to the input and to support wrapping tags..\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 12px)',\n      // Center vertically\n      pointerEvents: 'none',\n      // Don't block pointer events on the select under the icon.\n      color: theme.palette.action.active,\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the icon component if the popup is open. */\n    iconOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the icon component if `variant=\"filled\"`. */\n    iconFilled: {\n      right: 7\n    },\n\n    /* Styles applied to the icon component if `variant=\"outlined\"`. */\n    iconOutlined: {\n      right: 7\n    }\n  };\n};\n\nexports.styles = styles;\nvar defaultInput = /*#__PURE__*/React.createElement(_Input.default, null);\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\n\nvar NativeSelect = React.forwardRef(function NativeSelect(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? _ArrowDropDown.default : _props$IconComponent,\n      _props$input = props.input,\n      input = _props$input === void 0 ? defaultInput : _props$input,\n      inputProps = props.inputProps,\n      variant = props.variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"]);\n  var muiFormControl = (0, _useFormControl.default)();\n  var fcs = (0, _formControlState.default)({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant']\n  });\n  return React.cloneElement(input, (0, _extends2.default)({\n    // Most of the logic is implemented in `NativeSelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: _NativeSelectInput.default,\n    inputProps: (0, _extends2.default)((0, _extends2.default)({\n      children: children,\n      classes: classes,\n      IconComponent: IconComponent,\n      variant: fcs.variant,\n      type: undefined\n    }, inputProps), input ? input.props.inputProps : {}),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: _propTypes.default.elementType,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: _propTypes.default.element,\n\n  /**\n   * Attributes applied to the `select` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The input value. The DOM API casts this to a string.\n   */\n  value: _propTypes.default.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: _propTypes.default.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiNativeSelect'\n})(NativeSelect);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}